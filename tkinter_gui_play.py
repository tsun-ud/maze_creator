
import os
import subprocess
import tkinter as tk
from PIL import Image
from maze_module import get_maze

class App(object):
    def __init__(self, root):

        self.line_start = None
        self.top = tk.Frame()
        self.top.pack(side = tk.TOP)
        self.label = tk.Label(self.top, text="maze width")
        self.label.pack(side = tk.LEFT)
        self.entryW = tk.Entry(self.top)
        self.entryW.insert(0,"15")
        self.entryW.pack(side = tk.LEFT)
        self.label = tk.Label(self.top, text="maze height")
        self.label.pack(side = tk.LEFT)
        self.entryH = tk.Entry(self.top)
        self.entryH.insert(0,"10")
        self.entryH.pack(side = tk.LEFT)
        self.button1 = tk.Button(self.top, text="Get Maze", command= lambda: self.make_maze(self.entryW.get(),self.entryH.get()))
        self.button1.pack(pady=10, side = tk.LEFT)
        self.button1a = tk.Button(self.top, text="Show Solution", command= lambda: self.show_solution(self.maze))
        self.button1a.pack(pady=10, side = tk.LEFT)
        self.button2 = tk.Button(self.top, text="Save as PDF", command= self.generate_pdf)
        self.button2.pack(pady=10, side = tk.LEFT)
        self.button3 = tk.Button(self.top, text="Print Maze", command= self.print_maze)
        self.button3.pack(pady=10, side = tk.LEFT)
        self.buttonE = tk.Button(self.top, text="Exit", command= root.destroy)
        self.buttonE.pack(pady=10, side = tk.LEFT)
        self.C = tk.Canvas(root, bg="white")
        self.C.pack()
        self.green = 0

        '''
        self.C = tk.Canvas(root, height = 20+CS*len(maze), width = 20+CS*len(maze[0]), bg="white")
        x,y, = 10,10
        for row in maze:
            for cell in row:
                #if cell[2] in ("S", "E", "x"): self.C.create_rectangle(x,y,x+CS,y+CS, outline = "" , fill = "lightgreen" )
                if cell[2] in ("S", "E"): self.C.create_text(x+CS/2,y+CS/2, text = cell[2], font = ("Helvetica "+str(int(CS*0.8))+" bold"))
                x += CS
            x = 10
            y += CS
        x,y, = 10,10
        for row in maze:
            for cell in row:
                LW = int(CS/10)
                if not cell[0]: self.C.create_line(x+CS,y-int(LW/2),x+CS,y+CS+int(LW/2), width = LW)
                if not cell[1]: self.C.create_line(x-int(LW/2),y+CS,x+CS+int(LW/2),y+CS, width = LW)
                x += CS
            x = 10
            y += CS
        x,y = 10,10
        self.C.create_rectangle(x,y,x+CS*len(maze[0]),y+CS*len(maze), width = 6)
        #self.canvas.bind("<Button-1>", lambda e: self.draw(e.x, e.y))       
        self.C.pack()
        '''

    def generate_pdf(self):
        self.C.postscript(file="tmp.ps", colormode="color")
        psimage=Image.open('tmp.ps')
        psimage.save('myImage.png')
        process = subprocess.Popen(["ps2pdf", "-dEPSCrop", "tmp.ps", "result.pdf"], shell=True)
        process.wait()
        #os.remove("tmp.ps")

    def print_maze(self):
        self.C.postscript(file="tmp.ps", colormode="color")
        os.system("copy tmp.ps prn")
        #psimage=Image.open('tmp.ps')
        #psimage.save('myImage.png')
        #process = subprocess.Popen(["ps2pdf", "-dEPSCrop", "tmp.ps", "result.pdf"], shell=True)
        #process.wait()
        os.remove("tmp.ps")


    def make_maze(self,W,H):
        
        if not (W.isdigit() and H.isdigit()): tk.Messagebox.showerror(title="Error", message="Maze width and height must be numbers > 0.")
        W = int(W)
        H = int(H)
        self.maze = get_maze((H,W)) #sprawdz kolejnosc H W
        self.display_maze(self.maze)

    def show_solution(self,maze):
        self.green ^= 1
        if self.green:
            self.button1a.config(text = "Hide solution")
            self.display_maze(self.maze)
        else:
            self.button1a.config(text = "Show solution")
            self.display_maze(self.maze)

    
        
    def display_maze(self, maze):
        self.C.delete('all')
        screen_width = root.winfo_screenwidth()
        screen_height = root.winfo_screenheight()
        CS = int(min(screen_width/len(maze[0]),screen_height/len(maze), 80)*0.9)

        self.C.config(height = 20+CS*len(maze), width = 20+CS*len(maze[0]))
        x,y, = 10,10
        for row in maze:
            for cell in row:
                if cell[2] in ("S", "E", "x") and self.green: self.C.create_rectangle(x,y,x+CS,y+CS, outline = "" , fill = "lightgreen" )
                if cell[2] in ("S", "E"): self.C.create_text(x+CS/2,y+CS/2, text = cell[2], font = ("Helvetica "+str(int(CS*0.8))+" bold"))
                x += CS
            x = 10
            y += CS
        x,y, = 10,10
        for row in maze:
            for cell in row:
                LW = int(CS/10)
                if not cell[0]: self.C.create_line(x+CS,y-int(LW/2),x+CS,y+CS+int(LW/2), width = LW)
                if not cell[1]: self.C.create_line(x-int(LW/2),y+CS,x+CS+int(LW/2),y+CS, width = LW)
                x += CS
            x = 10
            y += CS
        x,y = 10,10
        self.C.create_rectangle(x,y,x+CS*len(maze[0]),y+CS*len(maze), width = 6)
        #self.canvas.bind("<Button-1>", lambda e: self.draw(e.x, e.y))       
        #self.C.pack()

if __name__ == '__main__':
    root = tk.Tk()
    root.title("aMAZEing")
    app = App(root)
    root.mainloop()

'''
import tkinter as tk
import subprocess

window = tk.Tk()
#label = tk.Label(text = "aMAZEd")
#label.pack()

maze10 = [[[1, 0, '1'], [0, 1, '1'], [0, 1, '2'], [1, 1, '1'], [1, 0, '1'], [0, 0, '1'], [1, 1, '0'], [1, 0, '0'], [1, 0, '0'], [0, 1, '0']], [[1, 1, '1'], [0, 0, '1'], [0, 1, '2'], [1, 1, '1'], [0, 0, '2'], [1, 1, '0'], [1, 0, '0'], [0, 1, '1'], [1, 0, '0'], [0, 0, '0']], [[0, 1, '1'], [1, 1, '2'], [0, 0, '2'], [1, 1, '0'], [1, 0, '0'], [0, 0, '0'], [0, 1, '0'], [1, 0, '1'], [1, 0, '1'], [0, 1, '1']], [[1, 0, '1'], [1, 1, '0'], [1, 1, '0'], [0, 0, '0'], [1, 1, '1'], [1, 1, '1'], [0, 1, '1'], [1, 1, '1'], [1, 0, '1'], [0, 0, '1']], [[1, 1, '1'], [0, 1, '0'], [1, 0, '1'], [1, 0, '1'], [0, 0, '1'], [0, 1, '2'], [0, 1, '1'], [1, 1, '1'], [1, 0, '1'], [0, 0, '1']], [[0, 0, '1'], [1, 1, 'x'], [0, 1, 'x'], [1, 1, '2'], [0, 1, '2'], [0, 1, '2'], [0, 1, '1'], [0, 0, '2'], [1, 0, '2'], [0, 1, '2']], [[1, 0, 'S'], [0, 0, 'x'], [0, 1, 'x'], [0, 1, '2'], [1, 0, '2'], [0, 0, '2'], [1, 0, '1'], [1, 1, '1'], [0, 1, '1'], [0, 1, '2']], [[1, 1, '1'], [0, 1, '1'], [0, 1, 'x'], [0, 0, '2'], [1, 1, 'x'], [1, 0, 'x'], [0, 1, 'x'], [0, 0, '2'], [1, 0, '1'], [0, 1, '1']], [[0, 1, '1'], [0, 0, '1'], [1, 1, 'x'], [0, 1, 'x'], [0, 1, 'x'], [1, 1, 'x'], [0, 0, 'x'], [0, 1, 'E'], [1, 1, '1'], [0, 1, '1']], [[1, 0, '1'], [1, 0, '1'], [0, 0, '1'], [1, 0, 'x'], [0, 0, 'x'], [1, 0, 'x'], [1, 0, 'x'], [0, 0, 'x'], [0, 0, '1'], [0, 0, '2']]]
maze_7x10 = [[[1, 0, '1'], [1, 1, '0'], [1, 1, '0'], [0, 0, '0'], [1, 1, '1'], [1, 1, '1'], [0, 1, '1'], [1, 1, '1'], [1, 0, '1'], [0, 0, '1']], [[1, 1, '1'], [0, 1, '0'], [1, 0, '1'], [1, 0, '1'], [0, 0, '1'], [0, 1, '2'], [0, 1, '1'], [1, 1, '1'], [1, 0, '1'], [0, 0, '1']], [[0, 0, '1'], [1, 1, 'x'], [0, 1, 'x'], [1, 1, '2'], [0, 1, '2'], [0, 1, '2'], [0, 1, '1'], [0, 0, '2'], [1, 0, '2'], [0, 1, '2']], [[1, 0, 'S'], [0, 0, 'x'], [0, 1, 'x'], [0, 1, '2'], [1, 0, '2'], [0, 0, '2'], [1, 0, '1'], [1, 1, '1'], [0, 1, '1'], [0, 1, '2']], [[1, 1, '1'], [0, 1, '1'], [0, 1, 'x'], [0, 0, '2'], [1, 1, 'x'], [1, 0, 'x'], [0, 1, 'x'], [0, 0, '2'], [1, 0, '1'], [0, 1, '1']], [[0, 1, '1'], [0, 0, '1'], [1, 1, 'x'], [0, 1, 'x'], [0, 1, 'x'], [1, 1, 'x'], [0, 0, 'x'], [0, 1, 'E'], [1, 1, '1'], [0, 1, '1']], [[1, 0, '1'], [1, 0, '1'], [0, 0, '1'], [1, 0, 'x'], [0, 0, 'x'], [1, 0, 'x'], [1, 0, 'x'], [0, 0, 'x'], [0, 0, '1'], [0, 0, '2']]]
maze = [[[1, 1, '2'], [1, 0, '2'], [0, 0, '2'], [1, 1, '4'], [1, 0, '4'], [0, 0, '4'], [1, 1, '8'], [1, 0, '8'], [0, 1, '8'], [1, 0, '9'], [1, 0, '9'], [1, 0, '9'], [1, 1, '8'], [0, 1, '8'], [1, 1, '7'], [1, 0, '7'], [1, 0, '7'], [1, 0, '7'], [1, 1, '7'], [0, 1, '7']], [[1, 1, '2'], [0, 0, '3'], [0, 1, '5'], [0, 1, '4'], [1, 1, '5'], [0, 1, '5'], [1, 0, '8'], [0, 1, '8'], [1, 0, '8'], [1, 0, '8'], [1, 0, '8'], [0, 1, '8'], [0, 0, '8'], [0, 1, '8'], [0, 1, '7'], [1, 1, '0'], [0, 1, '0'], [0, 1, '0'], [0, 1, '8'], [0, 1, '7']], [[0, 1, '2'], [1, 1, '4'], [1, 0, '4'], [0, 0, '4'], [0, 1, '5'], [1, 0, '5'], [0, 0, '5'], [1, 0, '8'], [0, 1, '8'], [1, 0, '8'], [1, 0, '8'], [0, 0, '8'], [1, 1, '7'], [1, 0, '7'], [0, 0, '7'], [0, 1, '0'], [0, 1, '0'], [0, 1, '0'], [0, 1, '8'], [0, 1, '7']], [[0, 1, '2'], [0, 1, '4'], [1, 1, 'x'], [0, 1, 'x'], [0, 1, '5'], [1, 1, 'x'], [1, 0, 'x'], [0, 1, 'x'], [1, 1, '7'], [1, 0, '7'], [1, 0, '7'], [0, 1, '7'], [0, 1, '7'], [0, 1, '0'], [1, 1, '0'], [0, 0, '0'], [1, 0, '0'], [0, 0, '0'], [0, 1, '8'], [0, 1, '7']], [[0, 1, '2'], [0, 1, '4'], [0, 1, 'x'], [1, 1, 'x'], [0, 0, '5'], [1, 1, 'x'], [0, 1, '6'], [1, 0, 'x'], [0, 1, 'x'], [1, 0, '9'], [0, 1, '9'], [1, 0, '7'], [0, 0, '7'], [0, 1, '0'], [0, 1, '0'], [0, 1, '1'], [1, 1, '0'], [0, 1, '0'], [0, 0, '8'], [0, 0, '7']], [[0, 1, '2'], [0, 1, '4'], [0, 1, 'x'], [1, 0, 'x'], [1, 0, 'x'], [0, 0, 'x'], [1, 0, '6'], [0, 1, '6'], [0, 1, 'x'], [1, 1, '0'], [1, 0, '9'], [0, 1, '9'], [1, 1, '0'], [0, 0, '0'], [0, 1, '0'], [1, 1, '0'], [0, 0, '0'], [0, 0, '0'], [1, 1, '3'], [0, 1, '3']], [[0, 1, '2'], [1, 0, '4'], [1, 0, 'x'], [0, 1, 'x'], [1, 0, '3'], [1, 1, '3'], [0, 0, '4'], [0, 0, '6'], [0, 1, 'x'], [1, 0, '0'], [0, 1, '0'], [1, 0, '9'], [0, 1, '9'], [1, 1, '0'], [0, 1, '0'], [0, 1, '0'], [1, 1, '3'], [1, 0, '3'], [0, 0, '3'], [0, 1, '3']], [[1, 1, 'x'], [0, 1, 'x'], [1, 1, 'x'], [1, 0, 'x'], [1, 0, '3'], [0, 1, '3'], [1, 1, '8'], [1, 0, '8'], [1, 0, 'x'], [0, 1, 'x'], [0, 0, '0'], [1, 1, '9'], [1, 0, '9'], [0, 0, '0'], [0, 0, '1'], [0, 1, '0'], [0, 1, '3'], [0, 1, '0'], [1, 1, '3'], [0, 0, '3']], [[0, 1, 'x'], [1, 0, 'x'], [0, 0, 'x'], [0, 1, '0'], [1, 1, '4'], [0, 1, '4'], [0, 1, '8'], [1, 1, '9'], [0, 1, '9'], [1, 0, 'x'], [0, 1, 'x'], [1, 1, '9'], [1, 0, '0'], [1, 0, '0'], [1, 0, '0'], [0, 0, '0'], [0, 1, '3'], [1, 1, 'x'], [1, 0, 'x'], [0, 1, 'x']], [[1, 0, 'x'], [0, 1, 'x'], [1, 0, '1'], [0, 1, '0'], [0, 0, '4'], [0, 1, '5'], [1, 1, '8'], [0, 0, '9'], [1, 0, '9'], [0, 1, '9'], [1, 0, 'x'], [0, 1, 'x'], [1, 0, '0'], [0, 1, '0'], [1, 0, '3'], [1, 1, '3'], [0, 0, '3'], [1, 0, 'x'], [0, 1, 'x'], [0, 1, 'x']], [[0, 1, '1'], [0, 1, 'x'], [1, 1, '0'], [1, 0, '0'], [0, 1, '1'], [0, 0, '5'], [1, 0, '8'], [0, 1, '8'], [0, 1, '9'], [0, 1, '9'], [0, 1, '9'], [0, 1, 'x'], [1, 1, 'x'], [1, 0, 'x'], [0, 1, 'x'], [0, 0, '4'], [1, 1, 'x'], [1, 0, 'x'], [0, 0, 'x'], [0, 1, 'x']], [[1, 1, 'x'], [0, 0, 'x'], [0, 1, '0'], [0, 1, '2'], [1, 1, '1'], [0, 1, '1'], [1, 1, '8'], [0, 0, '8'], [0, 1, '9'], [1, 0, '9'], [0, 0, '9'], [1, 0, 'x'], [0, 0, 'x'], [0, 1, '1'], [1, 0, 'x'], [1, 1, 'x'], [0, 0, 'x'], [1, 0, 'E'], [1, 0, 'x'], [0, 0, 'x']], [[0, 1, 'x'], [1, 1, 'S'], [0, 1, '0'], [1, 0, '2'], [0, 0, '2'], [0, 0, '1'], [1, 0, '8'], [1, 1, '8'], [0, 0, '9'], [1, 1, '2'], [1, 0, '2'], [0, 0, '2'], [1, 1, '2'], [1, 0, '2'], [0, 1, '2'], [1, 1, '1'], [1, 1, '1'], [1, 0, '2'], [1, 0, '2'], [0, 1, '2']], [[1, 0, 'x'], [0, 0, 'x'], [0, 1, '1'], [1, 1, '1'], [1, 0, '1'], [0, 1, '1'], [0, 1, '2'], [1, 0, '8'], [0, 1, '8'], [1, 0, '2'], [1, 0, '2'], [1, 0, '2'], [0, 0, '2'], [1, 1, '3'], [1, 1, '2'], [0, 0, '2'], [1, 0, '1'], [0, 1, '1'], [1, 1, '2'], [0, 1, '2']], [[1, 1, '3'], [0, 0, '3'], [1, 1, '1'], [0, 0, '1'], [1, 1, '1'], [1, 0, '1'], [0, 1, '2'], [1, 0, '8'], [0, 0, '8'], [1, 1, '4'], [1, 0, '4'], [1, 0, '4'], [1, 0, '4'], [0, 1, '3'], [1, 0, '4'], [0, 1, '4'], [1, 1, '1'], [0, 0, '1'], [0, 1, '2'], [0, 1, '3']], [[0, 1, '3'], [1, 1, '2'], [0, 0, '2'], [1, 0, '1'], [0, 0, '1'], [1, 0, '3'], [1, 1, '2'], [0, 1, '4'], [1, 1, '4'], [0, 1, '4'], [1, 1, '4'], [1, 0, '4'], [1, 1, '3'], [0, 0, '3'], [1, 1, '4'], [0, 0, '4'], [1, 0, '1'], [0, 1, '1'], [0, 1, '2'], [0, 0, '3']], [[0, 1, '3'], [1, 1, '2'], [0, 1, '2'], [1, 1, '3'], [0, 1, '3'], [1, 1, '2'], [0, 1, '2'], [0, 0, '4'], [0, 1, '4'], [0, 1, '5'], [1, 0, '4'], [0, 1, '4'], [1, 0, '3'], [0, 1, '3'], [0, 1, '4'], [1, 1, '1'], [1, 0, '1'], [0, 1, '1'], [1, 0, '2'], [0, 1, '2']], [[0, 1, '3'], [0, 1, '3'], [1, 0, '2'], [0, 1, '2'], [0, 0, '3'], [0, 0, '2'], [1, 0, '3'], [0, 1, '3'], [0, 1, '4'], [0, 1, '5'], [1, 1, '4'], [0, 0, '4'], [0, 1, '4'], [0, 1, '3'], [0, 1, '4'], [1, 1, '1'], [0, 0, '2'], [1, 0, '2'], [0, 1, '2'], [0, 1, '2']], [[0, 1, '3'], [1, 0, '3'], [0, 1, '3'], [0, 1, '2'], [1, 1, '2'], [1, 0, '2'], [0, 1, '2'], [0, 1, '3'], [0, 1, '4'], [0, 1, '5'], [1, 0, '4'], [0, 0, '4'], [1, 1, '3'], [0, 1, '3'], [0, 1, '4'], [1, 0, '1'], [0, 1, '1'], [1, 1, '2'], [0, 0, '2'], [0, 1, '2']], [[1, 0, '3'], [1, 0, '3'], [0, 0, '3'], [1, 0, '2'], [0, 0, '2'], [1, 0, '2'], [0, 0, '2'], [0, 0, '3'], [0, 0, '4'], [0, 0, '5'], [1, 0, '3'], [1, 0, '3'], [0, 0, '3'], [0, 0, '4'], [1, 0, '4'], [0, 0, '4'], [0, 0, '1'], [0, 0, '2'], [1, 0, '2'], [0, 0, '2']]]
maze_bad = [[[1, 1, '2'], [1, 0, '2'], [0, 0, '2'], [1, 1, '4'], [1, 0, '4'], [0, 0, '4'], [1, 1, '8'], [1, 0, '8'], [0, 1, '8'], [1, 0, '9'], [1, 0, '9'], [1, 0, '9'], [1, 1, '8'], [0, 1, '8'], [1, 1, '7'], [1, 0, '7'], [1, 0, '7'], [1, 0, '7'], [1, 1, '7'], [0, 1, '7']], [[0, 1, '2'], [0, 1, '4'], [1, 1, 'x'], [0, 1, 'x'], [0, 1, '5'], [1, 1, 'x'], [1, 0, 'x'], [0, 1, 'x'], [1, 1, '7'], [1, 0, '7'], [1, 0, '7'], [0, 1, '7'], [0, 1, '7'], [0, 1, '0'], [1, 1, '0'], [0, 0, '0'], [1, 0, '0'], [0, 0, '0'], [0, 1, '8'], [0, 1, '7']], [[0, 1, '2'], [0, 1, '4'], [0, 1, 'x'], [1, 1, 'x'], [0, 0, '5'], [1, 1, 'x'], [0, 1, '6'], [1, 0, 'x'], [0, 1, 'x'], [1, 0, '9'], [0, 1, '9'], [1, 0, '7'], [0, 0, '7'], [0, 1, '0'], [0, 1, '0'], [0, 1, '1'], [1, 1, '0'], [0, 1, '0'], [0, 0, '8'], [0, 0, '7']], [[0, 1, '2'], [0, 1, '4'], [0, 1, 'x'], [1, 0, 'x'], [1, 0, 'x'], [0, 0, 'x'], [1, 0, '6'], [0, 1, '6'], [0, 1, 'x'], [1, 1, '0'], [1, 0, '9'], [0, 1, '9'], [1, 1, '0'], [0, 0, '0'], [0, 1, '0'], [1, 1, '0'], [0, 0, '0'], [0, 0, '0'], [1, 1, '3'], [0, 1, '3']], [[0, 1, '2'], [1, 0, '4'], [1, 0, 'x'], [0, 1, 'x'], [1, 0, '3'], [1, 1, '3'], [0, 0, '4'], [0, 0, '6'], [0, 1, 'x'], [1, 0, '0'], [0, 1, '0'], [1, 0, '9'], [0, 1, '9'], [1, 1, '0'], [0, 1, '0'], [0, 1, '0'], [1, 1, '3'], [1, 0, '3'], [0, 0, '3'], [0, 1, '3']], [[1, 1, 'x'], [0, 1, 'x'], [1, 1, 'x'], [1, 0, 'x'], [1, 0, '3'], [0, 1, '3'], [1, 1, '8'], [1, 0, '8'], [1, 0, 'x'], [0, 1, 'x'], [0, 0, '0'], [1, 1, '9'], [1, 0, '9'], [0, 0, '0'], [0, 0, '1'], [0, 1, '0'], [0, 1, '3'], [0, 1, '0'], [1, 1, '3'], [0, 0, '3']], [[0, 1, 'x'], [1, 0, 'x'], [0, 0, 'x'], [0, 1, '0'], [1, 1, '4'], [0, 1, '4'], [0, 1, '8'], [1, 1, '9'], [0, 1, '9'], [1, 0, 'x'], [0, 1, 'x'], [1, 1, '9'], [1, 0, '0'], [1, 0, '0'], [1, 0, '0'], [0, 0, '0'], [0, 1, '3'], [1, 1, 'x'], [1, 0, 'x'], [0, 1, 'x']], [[1, 0, 'x'], [0, 1, 'x'], [1, 0, '1'], [0, 1, '0'], [0, 0, '4'], [0, 1, '5'], [1, 1, '8'], [0, 0, '9'], [1, 0, '9'], [0, 1, '9'], [1, 0, 'x'], [0, 1, 'x'], [1, 0, '0'], [0, 1, '0'], [1, 0, '3'], [1, 1, '3'], [0, 0, '3'], [1, 0, 'x'], [0, 1, 'x'], [0, 1, 'x']], [[0, 1, '1'], [0, 1, 'x'], [1, 1, '0'], [1, 0, '0'], [0, 1, '1'], [0, 0, '5'], [1, 0, '8'], [0, 1, '8'], [0, 1, '9'], [0, 1, '9'], [0, 1, '9'], [0, 1, 'x'], [1, 1, 'x'], [1, 0, 'x'], [0, 1, 'x'], [0, 0, '4'], [1, 1, 'x'], [1, 0, 'x'], [0, 0, 'x'], [0, 1, 'x']], [[1, 1, 'x'], [0, 0, 'x'], [0, 1, '0'], [0, 1, '2'], [1, 1, '1'], [0, 1, '1'], [1, 1, '8'], [0, 0, '8'], [0, 1, '9'], [1, 0, '9'], [0, 0, '9'], [1, 0, 'x'], [0, 0, 'x'], [0, 1, '1'], [1, 0, 'x'], [1, 1, 'x'], [0, 0, 'x'], [1, 0, 'E'], [1, 0, 'x'], [0, 0, 'x']], [[0, 1, 'x'], [1, 1, 'S'], [0, 1, '0'], [1, 0, '2'], [0, 0, '2'], [0, 0, '1'], [1, 0, '8'], [1, 1, '8'], [0, 0, '9'], [1, 1, '2'], [1, 0, '2'], [0, 0, '2'], [1, 1, '2'], [1, 0, '2'], [0, 1, '2'], [1, 1, '1'], [1, 1, '1'], [1, 0, '2'], [1, 0, '2'], [0, 1, '2']], [[1, 0, 'x'], [0, 0, 'x'], [0, 1, '1'], [1, 1, '1'], [1, 0, '1'], [0, 1, '1'], [0, 1, '2'], [1, 0, '8'], [0, 1, '8'], [1, 0, '2'], [1, 0, '2'], [1, 0, '2'], [0, 0, '2'], [1, 1, '3'], [1, 1, '2'], [0, 0, '2'], [1, 0, '1'], [0, 1, '1'], [1, 1, '2'], [0, 1, '2']], [[1, 1, '3'], [0, 0, '3'], [1, 1, '1'], [0, 0, '1'], [1, 1, '1'], [1, 0, '1'], [0, 1, '2'], [1, 0, '8'], [0, 0, '8'], [1, 1, '4'], [1, 0, '4'], [1, 0, '4'], [1, 0, '4'], [0, 1, '3'], [1, 0, '4'], [0, 1, '4'], [1, 1, '1'], [0, 0, '1'], [0, 1, '2'], [0, 1, '3']], [[0, 1, '3'], [1, 1, '2'], [0, 0, '2'], [1, 0, '1'], [0, 0, '1'], [1, 0, '3'], [1, 1, '2'], [0, 1, '4'], [1, 1, '4'], [0, 1, '4'], [1, 1, '4'], [1, 0, '4'], [1, 1, '3'], [0, 0, '3'], [1, 1, '4'], [0, 0, '4'], [1, 0, '1'], [0, 1, '1'], [0, 1, '2'], [0, 0, '3']], [[0, 1, '3'], [1, 1, '2'], [0, 1, '2'], [1, 1, '3'], [0, 1, '3'], [1, 1, '2'], [0, 1, '2'], [0, 0, '4'], [0, 1, '4'], [0, 1, '5'], [1, 0, '4'], [0, 1, '4'], [1, 0, '3'], [0, 1, '3'], [0, 1, '4'], [1, 1, '1'], [1, 0, '1'], [0, 1, '1'], [1, 0, '2'], [0, 1, '2']], [[0, 1, '3'], [0, 1, '3'], [1, 0, '2'], [0, 1, '2'], [0, 0, '3'], [0, 0, '2'], [1, 0, '3'], [0, 1, '3'], [0, 1, '4'], [0, 1, '5'], [1, 1, '4'], [0, 0, '4'], [0, 1, '4'], [0, 1, '3'], [0, 1, '4'], [1, 1, '1'], [0, 0, '2'], [1, 0, '2'], [0, 1, '2'], [0, 1, '2']], [[0, 1, '3'], [1, 0, '3'], [0, 1, '3'], [0, 1, '2'], [1, 1, '2'], [1, 0, '2'], [0, 1, '2'], [0, 1, '3'], [0, 1, '4'], [0, 1, '5'], [1, 0, '4'], [0, 0, '4'], [1, 1, '3'], [0, 1, '3'], [0, 1, '4'], [1, 0, '1'], [0, 1, '1'], [1, 1, '2'], [0, 0, '2'], [0, 1, '2']], [[1, 0, '3'], [1, 0, '3'], [0, 0, '3'], [1, 0, '2'], [0, 0, '2'], [1, 0, '2'], [0, 0, '2'], [0, 0, '3'], [0, 0, '4'], [0, 0, '5'], [1, 0, '3'], [1, 0, '3'], [0, 0, '3'], [0, 0, '4'], [1, 0, '4'], [0, 0, '4'], [0, 0, '1'], [0, 0, '2'], [1, 0, '2'], [0, 0, '2']]]

C = tk.Canvas(window, height = 20+80*len(maze), width = 20+80*len(maze[0]))
x,y, = 10,10

for row in maze:
    for cell in row:
        if cell[2] in ("S", "E", "x"): C.create_rectangle(x,y,x+80,y+80, outline = "" , fill = "lightgreen" )
        if cell[2] in ("S", "E"): C.create_text(x+40,y+40, text = cell[2], font = ("Helvetica 30 bold"))
        x += 80
    x = 10
    y += 80
x,y, = 10,10
for row in maze:
    for cell in row:
        if not cell[0]: C.create_line(x+80,y-3,x+80,y+83, width = 6)
        if not cell[1]: C.create_line(x-3,y+80,x+83,y+80, width = 6)
        x += 80
    x = 10
    y += 80
x,y = 10,10
C.create_rectangle(x,y,x+80*len(maze[0]),y+80*len(maze), width = 6)

C.pack()
C.postscript(file = "maza.ps", colormode = 'color')
#process = subprocess.Popen(["ps2pdf","maza.ps","maza.pdf"], shell = True)
process = subprocess.Popen(["ps2pdf", "maza.ps", "maza.pdf"], shell=True)
process.wait()
#command = ("gs -sDEVICE=pdfwrite -o out.pdf maza.ps")
#subprocess.call(command, shell = True)

window.mainloop()
'''